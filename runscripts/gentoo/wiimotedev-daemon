#!/sbin/runscript
# Distributed under the terms of the GNU Lesser General Public License, v2.1 or later
# Copyright (C) 2010 BartÅ‚omiej Burdukiewicz
# Contact: dev.strikeu@gmail.com   

PIDFILE=/var/run/wiimotedev-daemon.pid
SERVICE=/usr/sbin/wiimotedev-daemon
GROUP=wiimotedev
CONFIG=/etc/wiimotedev/wiimotedev.conf

opts="reload"

depend() {
	need dbus 
	after bluetooth
}

start() {
  ebegin "Starting Wiimotedev-daemon"

  if [ -z $(cat /etc/group | grep $GROUP) ]; then
    groupadd $GROUP &> /dev/null

    if [ ! -n $(cat /etc/group | grep $GROUP) ]; then
      eend 1
      echo "Cannot add new group $GROUP"
      exit 1
    fi

  fi

  if [ -f "$PIDFILE" ]; then
    eend 1
    echo "Already running. Please remove $PIDFILE to force start."
    exit 1  
  fi
  
  if [ -x "$SERVICE" ]; then
    start-stop-daemon --start -q -x "$SERVICE" --group "$GROUP"
  fi

  eend 0
}

stop() {
  ebegin "Stopping Wiimotedev-daemon"

  if [ -f "$PIDFILE" ]; then
    start-stop-daemon --stop --quiet --pidfile "$PIDFILE"
    rm -f $PIDFILE &> /dev/null
  else
    eend 1
    echo "Please start service first."
    exit 1
  fi

  eend 0
}

restart() {
	stop
        sleep 1
	start
}

reload() {
  ebegin "Reloading Wiimotedev-daemon"

  if [ ! -f "$PIDFILE" ]; then
    eend 1
    echo "Please run service first."
    exit 1  
  fi

  S1=$(dbus-send --system --dest=org.wiimotedev.daemon \
       --type=method_call --print-reply --reply-timeout=3000 \
       /service org.wiimotedev.service.dbusReloadSequenceList)

  if [ ! -n "$(echo ${S1} | grep "boolean true")" ]; then
    eend 1
    exit 1
  fi

  eend 0  
}

