#! /bin/sh
# Distributed under the terms of the GNU Lesser General Public License, v2.1 or later
# Copyright (C) 2010 Jarek Bojko
# Contact: vazir.pl@gmail.com

### BEGIN INIT INFO
# Provides:          Wiimotedev
# Required-Start:    bluetooth
# Required-Stop:     bluetooth
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Wiimotedev daemon
### END INIT INFO

PIDFILE=/var/run/wiimotedev-daemon.pid
SERVICE=/usr/sbin/wiimotedev-daemon
GROUP=wiimotedev
CONFIG=/etc/wiimotedev/wiimotedev.conf

start() {

  if [ -z $(cat /etc/group | grep $GROUP) ]; then
    groupadd $GROUP &> /dev/null

    if [ ! -n $(cat /etc/group | grep $GROUP) ]; then
      echo "Cannot add new group $GROUP"
      exit 1
    fi

  fi

  if [ -f "$PIDFILE" ]; then
    echo "Already running. Please remove $PIDFILE to force start."
    exit 1
  fi

  if [ -x "$SERVICE" ]; then
    start-stop-daemon --start -q -x "$SERVICE" --group "$GROUP"
  fi

}

stop() {

  if [ -e "$PIDFILE" ]; then
    kill -s QUIT $(cat $PIDFILE) &> /dev/null
    rm -f $PIDFILE &> /dev/null
  else
    echo "Please start service first."
    exit 1
  fi

}

reload() {

  if [ ! -f "$PIDFILE" ]; then
    echo "Please run service first."
    exit 1
  fi

  S1=$(dbus-send --system --dest=org.wiimotedev.daemon \
       --type=method_call --print-reply --reply-timeout=3000 \
       /service org.wiimotedev.service.dbusReloadSequenceList)

  if [ ! -n "$(echo ${S1} | grep "boolean true")" ]; then
    echo "Failed."
    exit 1
  fi

}

case "$1" in
  start)
    stat_busy "Starting Wiimotedev-daemon"
    start
    ;;
  stop)
    stat_busy "Stopping Wiimotedev-daemon"
    stop
    ;;
  restart)
    stat_busy "Stopping Wiimotedev-daemon"
    stop
    stat_busy "Starting Wiimotedev-daemon"
    start
    ;;
  reload)
    stat_busy "Reloading Wiimotedev-daemon"
    reload
    ;;
  *)
    echo $"Usage: $0 {start | stop | reload | restart }"
    ;;
esac

exit 0
